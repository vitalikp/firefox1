// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CoreDump.proto

#include "CoreDump.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_CoreDump_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_CoreDump_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Edge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_CoreDump_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StackFrame;
}  // namespace protobuf_CoreDump_2eproto
namespace mozilla {
namespace devtools {
namespace protobuf {
class MetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metadata>
      _instance;
} _Metadata_default_instance_;
class StackFrame_DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StackFrame_Data>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::uint64 sourceref_;
  ::google::protobuf::internal::ArenaStringPtr functiondisplayname_;
  ::google::protobuf::uint64 functiondisplaynameref_;
} _StackFrame_Data_default_instance_;
class StackFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StackFrame>
      _instance;
  const ::mozilla::devtools::protobuf::StackFrame_Data* data_;
  ::google::protobuf::uint64 ref_;
} _StackFrame_default_instance_;
class NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Node>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr typename__;
  ::google::protobuf::uint64 typenameref_;
  ::google::protobuf::internal::ArenaStringPtr jsobjectclassname_;
  ::google::protobuf::uint64 jsobjectclassnameref_;
  ::google::protobuf::internal::ArenaStringPtr scriptfilename_;
  ::google::protobuf::uint64 scriptfilenameref_;
} _Node_default_instance_;
class EdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Edge>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 nameref_;
} _Edge_default_instance_;
}  // namespace protobuf
}  // namespace devtools
}  // namespace mozilla
namespace protobuf_CoreDump_2eproto {
static void InitDefaultsMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozilla::devtools::protobuf::_Metadata_default_instance_;
    new (ptr) ::mozilla::devtools::protobuf::Metadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozilla::devtools::protobuf::Metadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Metadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadata}, {}};

static void InitDefaultsStackFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_;
    new (ptr) ::mozilla::devtools::protobuf::StackFrame_Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::mozilla::devtools::protobuf::_StackFrame_default_instance_;
    new (ptr) ::mozilla::devtools::protobuf::StackFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozilla::devtools::protobuf::StackFrame_Data::InitAsDefaultInstance();
  ::mozilla::devtools::protobuf::StackFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StackFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStackFrame}, {}};

static void InitDefaultsNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozilla::devtools::protobuf::_Node_default_instance_;
    new (ptr) ::mozilla::devtools::protobuf::Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozilla::devtools::protobuf::Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNode}, {
      &protobuf_CoreDump_2eproto::scc_info_Edge.base,
      &protobuf_CoreDump_2eproto::scc_info_StackFrame.base,}};

static void InitDefaultsEdge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozilla::devtools::protobuf::_Edge_default_instance_;
    new (ptr) ::mozilla::devtools::protobuf::Edge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozilla::devtools::protobuf::Edge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Edge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEdge}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Metadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StackFrame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Edge.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Metadata, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Metadata, timestamp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, column_),
  offsetof(::mozilla::devtools::protobuf::StackFrame_DataDefaultTypeInternal, source_),
  offsetof(::mozilla::devtools::protobuf::StackFrame_DataDefaultTypeInternal, sourceref_),
  offsetof(::mozilla::devtools::protobuf::StackFrame_DataDefaultTypeInternal, functiondisplayname_),
  offsetof(::mozilla::devtools::protobuf::StackFrame_DataDefaultTypeInternal, functiondisplaynameref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, issystem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, isselfhosted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, SourceOrRef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame_Data, FunctionDisplayNameOrRef_),
  1,
  0,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mozilla::devtools::protobuf::StackFrameDefaultTypeInternal, data_),
  offsetof(::mozilla::devtools::protobuf::StackFrameDefaultTypeInternal, ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::StackFrame, StackFrameType_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, id_),
  offsetof(::mozilla::devtools::protobuf::NodeDefaultTypeInternal, typename__),
  offsetof(::mozilla::devtools::protobuf::NodeDefaultTypeInternal, typenameref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, edges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, allocationstack_),
  offsetof(::mozilla::devtools::protobuf::NodeDefaultTypeInternal, jsobjectclassname_),
  offsetof(::mozilla::devtools::protobuf::NodeDefaultTypeInternal, jsobjectclassnameref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, coarsetype_),
  offsetof(::mozilla::devtools::protobuf::NodeDefaultTypeInternal, scriptfilename_),
  offsetof(::mozilla::devtools::protobuf::NodeDefaultTypeInternal, scriptfilenameref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, TypeNameOrRef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, JSObjectClassNameOrRef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Node, ScriptFilenameOrRef_),
  1,
  ~0u,
  ~0u,
  2,
  ~0u,
  0,
  ~0u,
  ~0u,
  3,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Edge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Edge, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Edge, referent_),
  offsetof(::mozilla::devtools::protobuf::EdgeDefaultTypeInternal, name_),
  offsetof(::mozilla::devtools::protobuf::EdgeDefaultTypeInternal, nameref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozilla::devtools::protobuf::Edge, EdgeNameOrRef_),
  0,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::mozilla::devtools::protobuf::Metadata)},
  { 7, 24, sizeof(::mozilla::devtools::protobuf::StackFrame_Data)},
  { 34, 42, sizeof(::mozilla::devtools::protobuf::StackFrame)},
  { 44, 63, sizeof(::mozilla::devtools::protobuf::Node)},
  { 74, 83, sizeof(::mozilla::devtools::protobuf::Edge)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozilla::devtools::protobuf::_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozilla::devtools::protobuf::_StackFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozilla::devtools::protobuf::_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozilla::devtools::protobuf::_Edge_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "CoreDump.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016CoreDump.proto\022\031mozilla.devtools.proto"
      "buf\"\035\n\010Metadata\022\021\n\ttimeStamp\030\001 \001(\004\"\216\003\n\nS"
      "tackFrame\022:\n\004data\030\001 \001(\0132*.mozilla.devtoo"
      "ls.protobuf.StackFrame.DataH\000\022\r\n\003ref\030\002 \001"
      "(\004H\000\032\242\002\n\004Data\022\n\n\002id\030\001 \001(\004\0225\n\006parent\030\002 \001("
      "\0132%.mozilla.devtools.protobuf.StackFrame"
      "\022\014\n\004line\030\003 \001(\r\022\016\n\006column\030\004 \001(\r\022\020\n\006source"
      "\030\005 \001(\014H\000\022\023\n\tsourceRef\030\006 \001(\004H\000\022\035\n\023functio"
      "nDisplayName\030\007 \001(\014H\001\022 \n\026functionDisplayN"
      "ameRef\030\010 \001(\004H\001\022\020\n\010isSystem\030\t \001(\010\022\024\n\014isSe"
      "lfHosted\030\n \001(\010B\r\n\013SourceOrRefB\032\n\030Functio"
      "nDisplayNameOrRefB\020\n\016StackFrameType\"\210\003\n\004"
      "Node\022\n\n\002id\030\001 \001(\004\022\022\n\010typeName\030\002 \001(\014H\000\022\025\n\013"
      "typeNameRef\030\003 \001(\004H\000\022\014\n\004size\030\004 \001(\004\022.\n\005edg"
      "es\030\005 \003(\0132\037.mozilla.devtools.protobuf.Edg"
      "e\022>\n\017allocationStack\030\006 \001(\0132%.mozilla.dev"
      "tools.protobuf.StackFrame\022\033\n\021jsObjectCla"
      "ssName\030\007 \001(\014H\001\022\036\n\024jsObjectClassNameRef\030\010"
      " \001(\004H\001\022\025\n\ncoarseType\030\t \001(\r:\0010\022\030\n\016scriptF"
      "ilename\030\n \001(\014H\002\022\033\n\021scriptFilenameRef\030\013 \001"
      "(\004H\002B\017\n\rTypeNameOrRefB\030\n\026JSObjectClassNa"
      "meOrRefB\025\n\023ScriptFilenameOrRef\"L\n\004Edge\022\020"
      "\n\010referent\030\001 \001(\004\022\016\n\004name\030\002 \001(\014H\000\022\021\n\007name"
      "Ref\030\003 \001(\004H\000B\017\n\rEdgeNameOrRef"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 948);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CoreDump.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_CoreDump_2eproto
namespace mozilla {
namespace devtools {
namespace protobuf {

// ===================================================================

void Metadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metadata::kTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metadata::Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_CoreDump_2eproto::scc_info_Metadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozilla.devtools.protobuf.Metadata)
}
Metadata::Metadata(const Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:mozilla.devtools.protobuf.Metadata)
}

void Metadata::SharedCtor() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:mozilla.devtools.protobuf.Metadata)
  SharedDtor();
}

void Metadata::SharedDtor() {
}

void Metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metadata::descriptor() {
  ::protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metadata& Metadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_CoreDump_2eproto::scc_info_Metadata.base);
  return *internal_default_instance();
}


void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:mozilla.devtools.protobuf.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozilla.devtools.protobuf.Metadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timeStamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozilla.devtools.protobuf.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozilla.devtools.protobuf.Metadata)
  return false;
#undef DO_
}

void Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozilla.devtools.protobuf.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timeStamp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozilla.devtools.protobuf.Metadata)
}

::google::protobuf::uint8* Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozilla.devtools.protobuf.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timeStamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozilla.devtools.protobuf.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozilla.devtools.protobuf.Metadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 timeStamp = 1;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozilla.devtools.protobuf.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozilla.devtools.protobuf.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozilla.devtools.protobuf.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozilla.devtools.protobuf.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp()) {
    set_timestamp(from.timestamp());
  }
}

void Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozilla.devtools.protobuf.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozilla.devtools.protobuf.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::Swap(Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metadata::InternalSwap(Metadata* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StackFrame_Data::InitAsDefaultInstance() {
  ::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_._instance.get_mutable()->parent_ = const_cast< ::mozilla::devtools::protobuf::StackFrame*>(
      ::mozilla::devtools::protobuf::StackFrame::internal_default_instance());
  ::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_.source_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_.sourceref_ = GOOGLE_ULONGLONG(0);
  ::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_.functiondisplayname_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mozilla::devtools::protobuf::_StackFrame_Data_default_instance_.functiondisplaynameref_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StackFrame_Data::kIdFieldNumber;
const int StackFrame_Data::kParentFieldNumber;
const int StackFrame_Data::kLineFieldNumber;
const int StackFrame_Data::kColumnFieldNumber;
const int StackFrame_Data::kSourceFieldNumber;
const int StackFrame_Data::kSourceRefFieldNumber;
const int StackFrame_Data::kFunctionDisplayNameFieldNumber;
const int StackFrame_Data::kFunctionDisplayNameRefFieldNumber;
const int StackFrame_Data::kIsSystemFieldNumber;
const int StackFrame_Data::kIsSelfHostedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StackFrame_Data::StackFrame_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_CoreDump_2eproto::scc_info_StackFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozilla.devtools.protobuf.StackFrame.Data)
}
StackFrame_Data::StackFrame_Data(const StackFrame_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parent()) {
    parent_ = new ::mozilla::devtools::protobuf::StackFrame(*from.parent_);
  } else {
    parent_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&isselfhosted_) -
    reinterpret_cast<char*>(&id_)) + sizeof(isselfhosted_));
  clear_has_SourceOrRef();
  switch (from.SourceOrRef_case()) {
    case kSource: {
      set_source(from.source());
      break;
    }
    case kSourceRef: {
      set_sourceref(from.sourceref());
      break;
    }
    case SOURCEORREF_NOT_SET: {
      break;
    }
  }
  clear_has_FunctionDisplayNameOrRef();
  switch (from.FunctionDisplayNameOrRef_case()) {
    case kFunctionDisplayName: {
      set_functiondisplayname(from.functiondisplayname());
      break;
    }
    case kFunctionDisplayNameRef: {
      set_functiondisplaynameref(from.functiondisplaynameref());
      break;
    }
    case FUNCTIONDISPLAYNAMEORREF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mozilla.devtools.protobuf.StackFrame.Data)
}

void StackFrame_Data::SharedCtor() {
  ::memset(&parent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isselfhosted_) -
      reinterpret_cast<char*>(&parent_)) + sizeof(isselfhosted_));
  clear_has_SourceOrRef();
  clear_has_FunctionDisplayNameOrRef();
}

StackFrame_Data::~StackFrame_Data() {
  // @@protoc_insertion_point(destructor:mozilla.devtools.protobuf.StackFrame.Data)
  SharedDtor();
}

void StackFrame_Data::SharedDtor() {
  if (this != internal_default_instance()) delete parent_;
  if (has_SourceOrRef()) {
    clear_SourceOrRef();
  }
  if (has_FunctionDisplayNameOrRef()) {
    clear_FunctionDisplayNameOrRef();
  }
}

void StackFrame_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StackFrame_Data::descriptor() {
  ::protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StackFrame_Data& StackFrame_Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_CoreDump_2eproto::scc_info_StackFrame.base);
  return *internal_default_instance();
}


void StackFrame_Data::clear_SourceOrRef() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.StackFrame.Data)
  switch (SourceOrRef_case()) {
    case kSource: {
      SourceOrRef_.source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSourceRef: {
      // No need to clear
      break;
    }
    case SOURCEORREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCEORREF_NOT_SET;
}

void StackFrame_Data::clear_FunctionDisplayNameOrRef() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.StackFrame.Data)
  switch (FunctionDisplayNameOrRef_case()) {
    case kFunctionDisplayName: {
      FunctionDisplayNameOrRef_.functiondisplayname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFunctionDisplayNameRef: {
      // No need to clear
      break;
    }
    case FUNCTIONDISPLAYNAMEORREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = FUNCTIONDISPLAYNAMEORREF_NOT_SET;
}


void StackFrame_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:mozilla.devtools.protobuf.StackFrame.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(parent_ != NULL);
    parent_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isselfhosted_) -
        reinterpret_cast<char*>(&id_)) + sizeof(isselfhosted_));
  }
  clear_SourceOrRef();
  clear_FunctionDisplayNameOrRef();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StackFrame_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozilla.devtools.protobuf.StackFrame.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozilla.devtools.protobuf.StackFrame parent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_line();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 column = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_column();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes source = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 sourceRef = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_SourceOrRef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &SourceOrRef_.sourceref_)));
          set_has_sourceref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes functionDisplayName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_functiondisplayname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 functionDisplayNameRef = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_FunctionDisplayNameOrRef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &FunctionDisplayNameOrRef_.functiondisplaynameref_)));
          set_has_functiondisplaynameref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isSystem = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_issystem();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issystem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isSelfHosted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isselfhosted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isselfhosted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozilla.devtools.protobuf.StackFrame.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozilla.devtools.protobuf.StackFrame.Data)
  return false;
#undef DO_
}

void StackFrame_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozilla.devtools.protobuf.StackFrame.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional .mozilla.devtools.protobuf.StackFrame parent = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_parent(), output);
  }

  // optional uint32 line = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->line(), output);
  }

  // optional uint32 column = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->column(), output);
  }

  switch (SourceOrRef_case()) {
    case kSource:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        5, this->source(), output);
      break;
    case kSourceRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->sourceref(), output);
      break;
    default: ;
  }
  switch (FunctionDisplayNameOrRef_case()) {
    case kFunctionDisplayName:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        7, this->functiondisplayname(), output);
      break;
    case kFunctionDisplayNameRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->functiondisplaynameref(), output);
      break;
    default: ;
  }
  // optional bool isSystem = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->issystem(), output);
  }

  // optional bool isSelfHosted = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isselfhosted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozilla.devtools.protobuf.StackFrame.Data)
}

::google::protobuf::uint8* StackFrame_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozilla.devtools.protobuf.StackFrame.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional .mozilla.devtools.protobuf.StackFrame parent = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_parent(), deterministic, target);
  }

  // optional uint32 line = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->line(), target);
  }

  // optional uint32 column = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->column(), target);
  }

  switch (SourceOrRef_case()) {
    case kSource:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          5, this->source(), target);
      break;
    case kSourceRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->sourceref(), target);
      break;
    default: ;
  }
  switch (FunctionDisplayNameOrRef_case()) {
    case kFunctionDisplayName:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          7, this->functiondisplayname(), target);
      break;
    case kFunctionDisplayNameRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->functiondisplaynameref(), target);
      break;
    default: ;
  }
  // optional bool isSystem = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->issystem(), target);
  }

  // optional bool isSelfHosted = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isselfhosted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozilla.devtools.protobuf.StackFrame.Data)
  return target;
}

size_t StackFrame_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozilla.devtools.protobuf.StackFrame.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .mozilla.devtools.protobuf.StackFrame parent = 2;
    if (has_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parent_);
    }

    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 line = 3;
    if (has_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->line());
    }

    // optional uint32 column = 4;
    if (has_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->column());
    }

    // optional bool isSystem = 9;
    if (has_issystem()) {
      total_size += 1 + 1;
    }

    // optional bool isSelfHosted = 10;
    if (has_isselfhosted()) {
      total_size += 1 + 1;
    }

  }
  switch (SourceOrRef_case()) {
    // optional bytes source = 5;
    case kSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->source());
      break;
    }
    // optional uint64 sourceRef = 6;
    case kSourceRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sourceref());
      break;
    }
    case SOURCEORREF_NOT_SET: {
      break;
    }
  }
  switch (FunctionDisplayNameOrRef_case()) {
    // optional bytes functionDisplayName = 7;
    case kFunctionDisplayName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->functiondisplayname());
      break;
    }
    // optional uint64 functionDisplayNameRef = 8;
    case kFunctionDisplayNameRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->functiondisplaynameref());
      break;
    }
    case FUNCTIONDISPLAYNAMEORREF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StackFrame_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozilla.devtools.protobuf.StackFrame.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const StackFrame_Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StackFrame_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozilla.devtools.protobuf.StackFrame.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozilla.devtools.protobuf.StackFrame.Data)
    MergeFrom(*source);
  }
}

void StackFrame_Data::MergeFrom(const StackFrame_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozilla.devtools.protobuf.StackFrame.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_parent()->::mozilla::devtools::protobuf::StackFrame::MergeFrom(from.parent());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      line_ = from.line_;
    }
    if (cached_has_bits & 0x00000008u) {
      column_ = from.column_;
    }
    if (cached_has_bits & 0x00000010u) {
      issystem_ = from.issystem_;
    }
    if (cached_has_bits & 0x00000020u) {
      isselfhosted_ = from.isselfhosted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.SourceOrRef_case()) {
    case kSource: {
      set_source(from.source());
      break;
    }
    case kSourceRef: {
      set_sourceref(from.sourceref());
      break;
    }
    case SOURCEORREF_NOT_SET: {
      break;
    }
  }
  switch (from.FunctionDisplayNameOrRef_case()) {
    case kFunctionDisplayName: {
      set_functiondisplayname(from.functiondisplayname());
      break;
    }
    case kFunctionDisplayNameRef: {
      set_functiondisplaynameref(from.functiondisplaynameref());
      break;
    }
    case FUNCTIONDISPLAYNAMEORREF_NOT_SET: {
      break;
    }
  }
}

void StackFrame_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozilla.devtools.protobuf.StackFrame.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StackFrame_Data::CopyFrom(const StackFrame_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozilla.devtools.protobuf.StackFrame.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StackFrame_Data::IsInitialized() const {
  return true;
}

void StackFrame_Data::Swap(StackFrame_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StackFrame_Data::InternalSwap(StackFrame_Data* other) {
  using std::swap;
  swap(parent_, other->parent_);
  swap(id_, other->id_);
  swap(line_, other->line_);
  swap(column_, other->column_);
  swap(issystem_, other->issystem_);
  swap(isselfhosted_, other->isselfhosted_);
  swap(SourceOrRef_, other->SourceOrRef_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(FunctionDisplayNameOrRef_, other->FunctionDisplayNameOrRef_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StackFrame_Data::GetMetadata() const {
  protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StackFrame::InitAsDefaultInstance() {
  ::mozilla::devtools::protobuf::_StackFrame_default_instance_.data_ = const_cast< ::mozilla::devtools::protobuf::StackFrame_Data*>(
      ::mozilla::devtools::protobuf::StackFrame_Data::internal_default_instance());
  ::mozilla::devtools::protobuf::_StackFrame_default_instance_.ref_ = GOOGLE_ULONGLONG(0);
}
void StackFrame::set_allocated_data(::mozilla::devtools::protobuf::StackFrame_Data* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_StackFrameType();
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    set_has_data();
    StackFrameType_.data_ = data;
  }
  // @@protoc_insertion_point(field_set_allocated:mozilla.devtools.protobuf.StackFrame.data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StackFrame::kDataFieldNumber;
const int StackFrame::kRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StackFrame::StackFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_CoreDump_2eproto::scc_info_StackFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozilla.devtools.protobuf.StackFrame)
}
StackFrame::StackFrame(const StackFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_StackFrameType();
  switch (from.StackFrameType_case()) {
    case kData: {
      mutable_data()->::mozilla::devtools::protobuf::StackFrame_Data::MergeFrom(from.data());
      break;
    }
    case kRef: {
      set_ref(from.ref());
      break;
    }
    case STACKFRAMETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mozilla.devtools.protobuf.StackFrame)
}

void StackFrame::SharedCtor() {
  clear_has_StackFrameType();
}

StackFrame::~StackFrame() {
  // @@protoc_insertion_point(destructor:mozilla.devtools.protobuf.StackFrame)
  SharedDtor();
}

void StackFrame::SharedDtor() {
  if (has_StackFrameType()) {
    clear_StackFrameType();
  }
}

void StackFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StackFrame::descriptor() {
  ::protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StackFrame& StackFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_CoreDump_2eproto::scc_info_StackFrame.base);
  return *internal_default_instance();
}


void StackFrame::clear_StackFrameType() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.StackFrame)
  switch (StackFrameType_case()) {
    case kData: {
      delete StackFrameType_.data_;
      break;
    }
    case kRef: {
      // No need to clear
      break;
    }
    case STACKFRAMETYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STACKFRAMETYPE_NOT_SET;
}


void StackFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:mozilla.devtools.protobuf.StackFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_StackFrameType();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StackFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozilla.devtools.protobuf.StackFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mozilla.devtools.protobuf.StackFrame.Data data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_StackFrameType();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &StackFrameType_.ref_)));
          set_has_ref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozilla.devtools.protobuf.StackFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozilla.devtools.protobuf.StackFrame)
  return false;
#undef DO_
}

void StackFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozilla.devtools.protobuf.StackFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (StackFrameType_case()) {
    case kData:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_data(), output);
      break;
    case kRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ref(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozilla.devtools.protobuf.StackFrame)
}

::google::protobuf::uint8* StackFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozilla.devtools.protobuf.StackFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (StackFrameType_case()) {
    case kData:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_data(), deterministic, target);
      break;
    case kRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ref(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozilla.devtools.protobuf.StackFrame)
  return target;
}

size_t StackFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozilla.devtools.protobuf.StackFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (StackFrameType_case()) {
    // optional .mozilla.devtools.protobuf.StackFrame.Data data = 1;
    case kData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *StackFrameType_.data_);
      break;
    }
    // optional uint64 ref = 2;
    case kRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ref());
      break;
    }
    case STACKFRAMETYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StackFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozilla.devtools.protobuf.StackFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const StackFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StackFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozilla.devtools.protobuf.StackFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozilla.devtools.protobuf.StackFrame)
    MergeFrom(*source);
  }
}

void StackFrame::MergeFrom(const StackFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozilla.devtools.protobuf.StackFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.StackFrameType_case()) {
    case kData: {
      mutable_data()->::mozilla::devtools::protobuf::StackFrame_Data::MergeFrom(from.data());
      break;
    }
    case kRef: {
      set_ref(from.ref());
      break;
    }
    case STACKFRAMETYPE_NOT_SET: {
      break;
    }
  }
}

void StackFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozilla.devtools.protobuf.StackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StackFrame::CopyFrom(const StackFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozilla.devtools.protobuf.StackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StackFrame::IsInitialized() const {
  return true;
}

void StackFrame::Swap(StackFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StackFrame::InternalSwap(StackFrame* other) {
  using std::swap;
  swap(StackFrameType_, other->StackFrameType_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StackFrame::GetMetadata() const {
  protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Node::InitAsDefaultInstance() {
  ::mozilla::devtools::protobuf::_Node_default_instance_.typename__.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mozilla::devtools::protobuf::_Node_default_instance_.typenameref_ = GOOGLE_ULONGLONG(0);
  ::mozilla::devtools::protobuf::_Node_default_instance_._instance.get_mutable()->allocationstack_ = const_cast< ::mozilla::devtools::protobuf::StackFrame*>(
      ::mozilla::devtools::protobuf::StackFrame::internal_default_instance());
  ::mozilla::devtools::protobuf::_Node_default_instance_.jsobjectclassname_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mozilla::devtools::protobuf::_Node_default_instance_.jsobjectclassnameref_ = GOOGLE_ULONGLONG(0);
  ::mozilla::devtools::protobuf::_Node_default_instance_.scriptfilename_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mozilla::devtools::protobuf::_Node_default_instance_.scriptfilenameref_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kTypeNameFieldNumber;
const int Node::kTypeNameRefFieldNumber;
const int Node::kSizeFieldNumber;
const int Node::kEdgesFieldNumber;
const int Node::kAllocationStackFieldNumber;
const int Node::kJsObjectClassNameFieldNumber;
const int Node::kJsObjectClassNameRefFieldNumber;
const int Node::kCoarseTypeFieldNumber;
const int Node::kScriptFilenameFieldNumber;
const int Node::kScriptFilenameRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_CoreDump_2eproto::scc_info_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozilla.devtools.protobuf.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      edges_(from.edges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_allocationstack()) {
    allocationstack_ = new ::mozilla::devtools::protobuf::StackFrame(*from.allocationstack_);
  } else {
    allocationstack_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&coarsetype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(coarsetype_));
  clear_has_TypeNameOrRef();
  switch (from.TypeNameOrRef_case()) {
    case kTypeName: {
      set_typename_(from.typename_());
      break;
    }
    case kTypeNameRef: {
      set_typenameref(from.typenameref());
      break;
    }
    case TYPENAMEORREF_NOT_SET: {
      break;
    }
  }
  clear_has_JSObjectClassNameOrRef();
  switch (from.JSObjectClassNameOrRef_case()) {
    case kJsObjectClassName: {
      set_jsobjectclassname(from.jsobjectclassname());
      break;
    }
    case kJsObjectClassNameRef: {
      set_jsobjectclassnameref(from.jsobjectclassnameref());
      break;
    }
    case JSOBJECTCLASSNAMEORREF_NOT_SET: {
      break;
    }
  }
  clear_has_ScriptFilenameOrRef();
  switch (from.ScriptFilenameOrRef_case()) {
    case kScriptFilename: {
      set_scriptfilename(from.scriptfilename());
      break;
    }
    case kScriptFilenameRef: {
      set_scriptfilenameref(from.scriptfilenameref());
      break;
    }
    case SCRIPTFILENAMEORREF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mozilla.devtools.protobuf.Node)
}

void Node::SharedCtor() {
  ::memset(&allocationstack_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coarsetype_) -
      reinterpret_cast<char*>(&allocationstack_)) + sizeof(coarsetype_));
  clear_has_TypeNameOrRef();
  clear_has_JSObjectClassNameOrRef();
  clear_has_ScriptFilenameOrRef();
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:mozilla.devtools.protobuf.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != internal_default_instance()) delete allocationstack_;
  if (has_TypeNameOrRef()) {
    clear_TypeNameOrRef();
  }
  if (has_JSObjectClassNameOrRef()) {
    clear_JSObjectClassNameOrRef();
  }
  if (has_ScriptFilenameOrRef()) {
    clear_ScriptFilenameOrRef();
  }
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  ::protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_CoreDump_2eproto::scc_info_Node.base);
  return *internal_default_instance();
}


void Node::clear_TypeNameOrRef() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.Node)
  switch (TypeNameOrRef_case()) {
    case kTypeName: {
      TypeNameOrRef_.typename__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTypeNameRef: {
      // No need to clear
      break;
    }
    case TYPENAMEORREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPENAMEORREF_NOT_SET;
}

void Node::clear_JSObjectClassNameOrRef() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.Node)
  switch (JSObjectClassNameOrRef_case()) {
    case kJsObjectClassName: {
      JSObjectClassNameOrRef_.jsobjectclassname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kJsObjectClassNameRef: {
      // No need to clear
      break;
    }
    case JSOBJECTCLASSNAMEORREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = JSOBJECTCLASSNAMEORREF_NOT_SET;
}

void Node::clear_ScriptFilenameOrRef() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.Node)
  switch (ScriptFilenameOrRef_case()) {
    case kScriptFilename: {
      ScriptFilenameOrRef_.scriptfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kScriptFilenameRef: {
      // No need to clear
      break;
    }
    case SCRIPTFILENAMEORREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[2] = SCRIPTFILENAMEORREF_NOT_SET;
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:mozilla.devtools.protobuf.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(allocationstack_ != NULL);
    allocationstack_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&coarsetype_) -
        reinterpret_cast<char*>(&id_)) + sizeof(coarsetype_));
  }
  clear_TypeNameOrRef();
  clear_JSObjectClassNameOrRef();
  clear_ScriptFilenameOrRef();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozilla.devtools.protobuf.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes typeName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_typename_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 typeNameRef = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_TypeNameOrRef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &TypeNameOrRef_.typenameref_)));
          set_has_typenameref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mozilla.devtools.protobuf.Edge edges = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozilla.devtools.protobuf.StackFrame allocationStack = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocationstack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes jsObjectClassName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jsobjectclassname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 jsObjectClassNameRef = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_JSObjectClassNameOrRef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &JSObjectClassNameOrRef_.jsobjectclassnameref_)));
          set_has_jsobjectclassnameref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 coarseType = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_coarsetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coarsetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes scriptFilename = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_scriptfilename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 scriptFilenameRef = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_ScriptFilenameOrRef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ScriptFilenameOrRef_.scriptfilenameref_)));
          set_has_scriptfilenameref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozilla.devtools.protobuf.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozilla.devtools.protobuf.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozilla.devtools.protobuf.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  switch (TypeNameOrRef_case()) {
    case kTypeName:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        2, this->typename_(), output);
      break;
    case kTypeNameRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->typenameref(), output);
      break;
    default: ;
  }
  // optional uint64 size = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->size(), output);
  }

  // repeated .mozilla.devtools.protobuf.Edge edges = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->edges(static_cast<int>(i)),
      output);
  }

  // optional .mozilla.devtools.protobuf.StackFrame allocationStack = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_allocationstack(), output);
  }

  switch (JSObjectClassNameOrRef_case()) {
    case kJsObjectClassName:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        7, this->jsobjectclassname(), output);
      break;
    case kJsObjectClassNameRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->jsobjectclassnameref(), output);
      break;
    default: ;
  }
  // optional uint32 coarseType = 9 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->coarsetype(), output);
  }

  switch (ScriptFilenameOrRef_case()) {
    case kScriptFilename:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        10, this->scriptfilename(), output);
      break;
    case kScriptFilenameRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->scriptfilenameref(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozilla.devtools.protobuf.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozilla.devtools.protobuf.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  switch (TypeNameOrRef_case()) {
    case kTypeName:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          2, this->typename_(), target);
      break;
    case kTypeNameRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->typenameref(), target);
      break;
    default: ;
  }
  // optional uint64 size = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->size(), target);
  }

  // repeated .mozilla.devtools.protobuf.Edge edges = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->edges(static_cast<int>(i)), deterministic, target);
  }

  // optional .mozilla.devtools.protobuf.StackFrame allocationStack = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_allocationstack(), deterministic, target);
  }

  switch (JSObjectClassNameOrRef_case()) {
    case kJsObjectClassName:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          7, this->jsobjectclassname(), target);
      break;
    case kJsObjectClassNameRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->jsobjectclassnameref(), target);
      break;
    default: ;
  }
  // optional uint32 coarseType = 9 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->coarsetype(), target);
  }

  switch (ScriptFilenameOrRef_case()) {
    case kScriptFilename:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          10, this->scriptfilename(), target);
      break;
    case kScriptFilenameRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->scriptfilenameref(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozilla.devtools.protobuf.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozilla.devtools.protobuf.Node)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mozilla.devtools.protobuf.Edge edges = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .mozilla.devtools.protobuf.StackFrame allocationStack = 6;
    if (has_allocationstack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *allocationstack_);
    }

    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 size = 4;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->size());
    }

    // optional uint32 coarseType = 9 [default = 0];
    if (has_coarsetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->coarsetype());
    }

  }
  switch (TypeNameOrRef_case()) {
    // optional bytes typeName = 2;
    case kTypeName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->typename_());
      break;
    }
    // optional uint64 typeNameRef = 3;
    case kTypeNameRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->typenameref());
      break;
    }
    case TYPENAMEORREF_NOT_SET: {
      break;
    }
  }
  switch (JSObjectClassNameOrRef_case()) {
    // optional bytes jsObjectClassName = 7;
    case kJsObjectClassName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->jsobjectclassname());
      break;
    }
    // optional uint64 jsObjectClassNameRef = 8;
    case kJsObjectClassNameRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jsobjectclassnameref());
      break;
    }
    case JSOBJECTCLASSNAMEORREF_NOT_SET: {
      break;
    }
  }
  switch (ScriptFilenameOrRef_case()) {
    // optional bytes scriptFilename = 10;
    case kScriptFilename: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->scriptfilename());
      break;
    }
    // optional uint64 scriptFilenameRef = 11;
    case kScriptFilenameRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->scriptfilenameref());
      break;
    }
    case SCRIPTFILENAMEORREF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozilla.devtools.protobuf.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozilla.devtools.protobuf.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozilla.devtools.protobuf.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozilla.devtools.protobuf.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  edges_.MergeFrom(from.edges_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_allocationstack()->::mozilla::devtools::protobuf::StackFrame::MergeFrom(from.allocationstack());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000008u) {
      coarsetype_ = from.coarsetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.TypeNameOrRef_case()) {
    case kTypeName: {
      set_typename_(from.typename_());
      break;
    }
    case kTypeNameRef: {
      set_typenameref(from.typenameref());
      break;
    }
    case TYPENAMEORREF_NOT_SET: {
      break;
    }
  }
  switch (from.JSObjectClassNameOrRef_case()) {
    case kJsObjectClassName: {
      set_jsobjectclassname(from.jsobjectclassname());
      break;
    }
    case kJsObjectClassNameRef: {
      set_jsobjectclassnameref(from.jsobjectclassnameref());
      break;
    }
    case JSOBJECTCLASSNAMEORREF_NOT_SET: {
      break;
    }
  }
  switch (from.ScriptFilenameOrRef_case()) {
    case kScriptFilename: {
      set_scriptfilename(from.scriptfilename());
      break;
    }
    case kScriptFilenameRef: {
      set_scriptfilenameref(from.scriptfilenameref());
      break;
    }
    case SCRIPTFILENAMEORREF_NOT_SET: {
      break;
    }
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozilla.devtools.protobuf.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozilla.devtools.protobuf.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
  swap(allocationstack_, other->allocationstack_);
  swap(id_, other->id_);
  swap(size_, other->size_);
  swap(coarsetype_, other->coarsetype_);
  swap(TypeNameOrRef_, other->TypeNameOrRef_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(JSObjectClassNameOrRef_, other->JSObjectClassNameOrRef_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(ScriptFilenameOrRef_, other->ScriptFilenameOrRef_);
  swap(_oneof_case_[2], other->_oneof_case_[2]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Edge::InitAsDefaultInstance() {
  ::mozilla::devtools::protobuf::_Edge_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::mozilla::devtools::protobuf::_Edge_default_instance_.nameref_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edge::kReferentFieldNumber;
const int Edge::kNameFieldNumber;
const int Edge::kNameRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edge::Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_CoreDump_2eproto::scc_info_Edge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozilla.devtools.protobuf.Edge)
}
Edge::Edge(const Edge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  referent_ = from.referent_;
  clear_has_EdgeNameOrRef();
  switch (from.EdgeNameOrRef_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kNameRef: {
      set_nameref(from.nameref());
      break;
    }
    case EDGENAMEORREF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mozilla.devtools.protobuf.Edge)
}

void Edge::SharedCtor() {
  referent_ = GOOGLE_ULONGLONG(0);
  clear_has_EdgeNameOrRef();
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:mozilla.devtools.protobuf.Edge)
  SharedDtor();
}

void Edge::SharedDtor() {
  if (has_EdgeNameOrRef()) {
    clear_EdgeNameOrRef();
  }
}

void Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Edge::descriptor() {
  ::protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Edge& Edge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_CoreDump_2eproto::scc_info_Edge.base);
  return *internal_default_instance();
}


void Edge::clear_EdgeNameOrRef() {
// @@protoc_insertion_point(one_of_clear_start:mozilla.devtools.protobuf.Edge)
  switch (EdgeNameOrRef_case()) {
    case kName: {
      EdgeNameOrRef_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kNameRef: {
      // No need to clear
      break;
    }
    case EDGENAMEORREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EDGENAMEORREF_NOT_SET;
}


void Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:mozilla.devtools.protobuf.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  referent_ = GOOGLE_ULONGLONG(0);
  clear_EdgeNameOrRef();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozilla.devtools.protobuf.Edge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 referent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_referent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &referent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 nameRef = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_EdgeNameOrRef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &EdgeNameOrRef_.nameref_)));
          set_has_nameref();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozilla.devtools.protobuf.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozilla.devtools.protobuf.Edge)
  return false;
#undef DO_
}

void Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozilla.devtools.protobuf.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 referent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->referent(), output);
  }

  switch (EdgeNameOrRef_case()) {
    case kName:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        2, this->name(), output);
      break;
    case kNameRef:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nameref(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozilla.devtools.protobuf.Edge)
}

::google::protobuf::uint8* Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozilla.devtools.protobuf.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 referent = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->referent(), target);
  }

  switch (EdgeNameOrRef_case()) {
    case kName:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          2, this->name(), target);
      break;
    case kNameRef:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->nameref(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozilla.devtools.protobuf.Edge)
  return target;
}

size_t Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozilla.devtools.protobuf.Edge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 referent = 1;
  if (has_referent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->referent());
  }

  switch (EdgeNameOrRef_case()) {
    // optional bytes name = 2;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
      break;
    }
    // optional uint64 nameRef = 3;
    case kNameRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nameref());
      break;
    }
    case EDGENAMEORREF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozilla.devtools.protobuf.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozilla.devtools.protobuf.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozilla.devtools.protobuf.Edge)
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozilla.devtools.protobuf.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_referent()) {
    set_referent(from.referent());
  }
  switch (from.EdgeNameOrRef_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kNameRef: {
      set_nameref(from.nameref());
      break;
    }
    case EDGENAMEORREF_NOT_SET: {
      break;
    }
  }
}

void Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozilla.devtools.protobuf.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozilla.devtools.protobuf.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {
  return true;
}

void Edge::Swap(Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edge::InternalSwap(Edge* other) {
  using std::swap;
  swap(referent_, other->referent_);
  swap(EdgeNameOrRef_, other->EdgeNameOrRef_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Edge::GetMetadata() const {
  protobuf_CoreDump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CoreDump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace devtools
}  // namespace mozilla
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozilla::devtools::protobuf::Metadata* Arena::CreateMaybeMessage< ::mozilla::devtools::protobuf::Metadata >(Arena* arena) {
  return Arena::CreateInternal< ::mozilla::devtools::protobuf::Metadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozilla::devtools::protobuf::StackFrame_Data* Arena::CreateMaybeMessage< ::mozilla::devtools::protobuf::StackFrame_Data >(Arena* arena) {
  return Arena::CreateInternal< ::mozilla::devtools::protobuf::StackFrame_Data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozilla::devtools::protobuf::StackFrame* Arena::CreateMaybeMessage< ::mozilla::devtools::protobuf::StackFrame >(Arena* arena) {
  return Arena::CreateInternal< ::mozilla::devtools::protobuf::StackFrame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozilla::devtools::protobuf::Node* Arena::CreateMaybeMessage< ::mozilla::devtools::protobuf::Node >(Arena* arena) {
  return Arena::CreateInternal< ::mozilla::devtools::protobuf::Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozilla::devtools::protobuf::Edge* Arena::CreateMaybeMessage< ::mozilla::devtools::protobuf::Edge >(Arena* arena) {
  return Arena::CreateInternal< ::mozilla::devtools::protobuf::Edge >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
